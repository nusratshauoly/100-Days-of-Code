/* step-5: In CSS, you can target everything with an asterisk. Add a border to everything by using the * selector, and giving it a border of 1px solid black. This is a trick that helps visualize where elements are and their size. You will remove this later.*/
*{
   border: 1px solid black;
/* step-6: Also add a box-sizing of border-box to everything. This will make it so the border you added doesn't add any size to your elements.
*/
   box-sizing: border-box;
}

/* step-7: You can see the body (it's the inner-most box on your page); the box around it is the html element. Make your body fill the whole viewport by giving it a height of 100vh. Remove the default margin from the body by setting the margin to 0. Finally, set the overflow property to hidden to hide any scroll bars that appear when something extends past the viewport. */
body{
    height: 100vh;
    margin: 0;
    overflow: hidden;
}
/* step-9:Give your .background-buildings element a width and height of 100% to make it the full width and height of its parent, the body. */
.background-buildings{
    height: 100%;
    width: 100%;
}
 /* step-10:Nest a div with a class of bb1 in the background buildings container. Open your styles.css file, and give .bb1 a width of 10% and height of 70%. "bb" stands for "background building", this will be your first building. */

 .bb1{
    width: 10%;
    height: 70%;
/* step-13: Give your .bb1 element these style properties: display: flex;, flex-direction: column;, and align-items: center;. This will center the parts of the building using "flex" or "flexbox". You will learn about it in more detail on another project.*/
    display: flex;
    flex-direction: column;
    align-items: center;
/* step-14: Now you have something that is resembling a building. You are ready to create your first variable. Variable declarations begin with two dashes (-) and are given a name and a value like this: --variable-name: value;. In the rule for the bb1 class, create a variable named --building-color1 and give it a value of #999.*/
/* step-17: Change the value of your variable from #999 to #aa80ff and you can see how it gets applied everywhere you used the variable. This is the main advantage of using variables, being able to quickly change many values in your stylesheet by just changing the value of a variable.*/
   /* --building-color1: #999; */
   --building-color1: #aa80ff;
}
/* step-12: Give the parts of your building width and height properties with these values: 70% and 10% to .bb1a, 80% and 10% to .bb1b, 90% and 10% to .bb1c, and 100% and 70% to .bb1d. Remember that these percentages are relative to the parent and note that the heights will add up to 100% - vertically filling the container.*/
.bb1a{
    width: 70%;
    height: 10%;
/* step-15:To use a variable, put the variable name in parentheses with var in front of them like this: var(--variable-name). Whatever value you gave the variable will be applied to whatever property you use it on.
Add the variable --building-color1 you created in the previous step as the value of the background-color property of the .bb1a class. */
   background-color: var(--building-color1);
}
/* step-16: Use the same variable as the background-color of the .bb1b, .bb1c, and .bb1d classes to fill in the rest of the building.*/
.bb1b{
    width: 80%;
    height: 10%;
}
.bb1c{
    width:90%;
    height: 10%;
}
.bb1d{
    width: 100%;
    height: 70%;
}